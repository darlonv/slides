{"title":"Blocos","markdown":{"yaml":{"title":"Blocos","author":"Algoritmos e Estruturas de Dados","format":"revealjs"},"headingText":"Blocos de código","containsRefs":false,"markdown":"\n\n\n\n::: {.fragment}\nÉ comum em algoritmos e linguagens de programação a delimitação de trechos de código. A tais delimitações chamamos de bloco.\n:::\n\n--- \n\n**Exemplo**  \nO exemplo apresentado abaixo apresenta apenas a estrutura para definição de códigos, ele não faz parte da solução de nenhum problema específico. É apenas a ilustração da subdivisão de um código em blocos.\n\n---\n\n::: {.panel-tabset}\n\n### Portugol\n\n  ```c\n  início\n    //comando 1\n    //comando 2\n    // highlight-start\n    início              //<-- Início do bloco\n        //comando 3\n        //comando 4\n        //comando 5\n    fim;                //<-- Término do bloco\n    // highlight-end\n    // comando 6\n    // comando 7\n  fim.\n  ```\n---\n\n  Em portugol, os blocos são delimitados pelos operadores `início` e `fim`.\n\n  Adaptado de ([Forbellone 2022, p. 43](https://plataforma.bvirtual.com.br/Leitor/Publicacao/323/pdf/))\n\n\n### Java\n\n   ```java\n  {\n    // comando 1 ;\n    // comando 2 ;\n    // highlight-start\n    {                   //<-- Início do bloco\n        // comando 3 ;\n        // comando 4 ;\n        // comando 5 ;\n    }                   //<-- Término do bloco\n    // highlight-end\n    // comando 6 ;\n    // comando 7 ;\n  }\n  ```\n\n  Em Java, os blocos são delimitados pelas chaves `{` e `}`.\n\n### Python\n\n  ```python\n    # comando 1\n    # comando 2\n    # highlight-start\n        # comando 3     #<-- Início do bloco\n        # comando 4\n        # comando 5     #<-- Término do bloco\n    # highlight-end\n    # comando 6 ;\n    # comando 7 ;\n  ```\n\nEm Python, os blocos são definidos pela indentação do código, ou seja, pelo alinhamento no início de cada linha do código. Este alinhamento pode ser feito por caracteres *tab* ou *espaços*.\n\n:::\n\n--- \n\nA ideia é que os blocos agrupem determinadas tarefas dentro do código.\n\n--- \n\n**Exemplo**  \n\n- Calcular e mostrar a área e o perímetro de um retângulo, a partir das informações de sua base e altura.\n\n--- \n\n::: {.panel-tabset}\n\n### Portugol\n\n  ```c\n  início\n    //Variáveis\n    real: base, altura;\n    real: area, perimetro;\n\n    //Entrada\n    escreva(\"Base: \");\n    leia(base);\n    escreva(\"Altura: \");\n    leia(altura);\n\n    //Processamento\n    // highlight-start\n    início              //<-- Início do bloco\n        //Cálculo da área\n        area = base * altura;\n    fim;                //<-- Término do bloco\n    // highlight-end\n\n    // highlight-start\n    início              //<-- Início do bloco\n        //Cálculo do perímetro\n        area = (base + altura)*2;\n    fim;                //<-- Término do bloco\n    // highlight-end\n\n    //Saída\n    escreva(\"Área     : \", area);\n    escreva(\"Perímetro: \", perimetro);\n  fim.\n  ```\n\n  Adaptado de ([Forbellone 2022, p. 43](https://plataforma.bvirtual.com.br/Leitor/Publicacao/323/pdf/))\n\n\n### Java\n\n   ```java\n  {\n    //Variáveis\n    float base, altura;\n    float area, perimetro;\n    Scanner entrada\n\n    //Entrada\n    entrada = new Scanner(System.in);\n    base   = entrada.nextFloat();\n    altura = entrada.nextFloat();\n\n    //Processamento\n    // highlight-start\n    { // Cálculo da área  <-- Início do bloco\n        \n        area = base * altura;\n    }                   //<-- Término do bloco\n    // highlight-end\n\n    // highlight-start\n    { // Cálculo da área  <-- Início do bloco\n        \n        perimetro = (base + altura)*2;\n    }                   //<-- Término do bloco\n    // highlight-end\n\n    //Saída\n    System.out.printf(\"Área     : %f\", area);\n    System.out.printf(\"Perímetro: %f\", perimetro);\n  }\n  ```\n### Python\n\n  ```python\n    # Variáveis e entrada\n    base   = float(input(\"Base: \"))\n    altura = float(input(\"Base: \"))\n\n    # Processamento\n    area = base*altura \n    perimetro = (base+altura*2)\n\n    # Saída\n    print(\"Área     : \", area)\n    print(\"Perímetro:\", perimetro)\n  ```\n\n:::\n\n---\n\nUtilizando a representação de algoritmos utilizando fluxogramas, o uso dos blocos se torna mais intuitivo.\n\n---\n\n**Exemplo**  \n- Representação do cálculo da área e perímetro do retângulo utilizando fluxograma.\n\n---\n\n```{mermaid}\nflowchart TD\n    inicio(Inicio)\n    subgraph Variáveis a serem utilizadas\n    variaveis[\"\n      real: base, altura;\n      real: area, perimetro;\n      \"]\n    end\n    subgraph \"Processamento\"\n      subgraph \"Cálculo da área\"\n        area[\"\n        area ← base * altura;\n        \"]\n      end\n      subgraph \"Cálculo do perímetro\"\n        perimetro[\"\n        perimetro ← (base+altura)*2;\n        \"]\n      end\n    end\n    fim(Fim)\n    inicio --> variaveis --> area --> perimetro --> fim\n\n    style area color:#66f\n    style perimetro color:#66f\n```"},"formats":{"revealjs":{"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"09-Blocos.html"},"language":{},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.2.335","auto-stretch":true,"title":"Blocos","author":"Algoritmos e Estruturas de Dados"}}}}